// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[12..14],a=dmux0,b=dmux1,c=dmux2,d=dmux3,e=dmux4,f=dmux5,g=dmux6,h=dmux7);
    RAM4K(in=in,load=dmux0,address=address[0..11],out=ram0out);
    RAM4K(in=in,load=dmux1,address=address[0..11],out=ram1out);
    RAM4K(in=in,load=dmux2,address=address[0..11],out=ram2out);
    RAM4K(in=in,load=dmux3,address=address[0..11],out=ram3out);
    RAM4K(in=in,load=dmux4,address=address[0..11],out=ram4out);
    RAM4K(in=in,load=dmux5,address=address[0..11],out=ram5out);
    RAM4K(in=in,load=dmux6,address=address[0..11],out=ram6out);
    RAM4K(in=in,load=dmux7,address=address[0..11],out=ram7out);
    Mux8Way16(a=ram0out ,b=ram1out ,c=ram2out ,d=ram3out ,e=ram4out ,f=ram5out ,g=ram6out ,h=ram7out ,sel=address[12..14] ,out=out);
}