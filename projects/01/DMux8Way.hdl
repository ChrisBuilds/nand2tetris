// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0],out=notSelZero);
    Not(in=sel[1],out=notSelOne);
    Not(in=sel[2],out=notSelTwo);
    // sel[0..1] all states
    And(a=notSelZero,b=notSelOne,out=zerozero);
    And(a=sel[0],b=notSelOne,out=zeroone);
    And(a=notSelZero,b=sel[1],out=onezero);
    And(a=sel[0],b=sel[1],out=oneone);
    // sel[2] both states with all sel[0..1] And output
    And(a=zerozero,b=notSelTwo,out=zerozerozero);
    And(a=zeroone,b=notSelTwo,out=zerozeroone);
    And(a=onezero,b=notSelTwo,out=zeroonezero);
    And(a=oneone,b=notSelTwo,out=zerooneone);
    And(a=zerozero,b=sel[2],out=onezerozero);
    And(a=zeroone,b=sel[2],out=onezeroone);
    And(a=onezero,b=sel[2],out=oneonezero);
    And(a=oneone,b=sel[2],out=oneoneone);
    // input And sel
    And(a=in,b=zerozerozero,out=a);
    And(a=in,b=zerozeroone,out=b);
    And(a=in,b=zeroonezero,out=c);
    And(a=in,b=zerooneone,out=d);
    And(a=in,b=onezerozero,out=e);
    And(a=in,b=onezeroone,out=f);
    And(a=in,b=oneonezero,out=g);
    And(a=in,b=oneoneone,out=h);
}